---
on:
  push:
    branches: master
  pull_request:
name: release
jobs:
  build:
    name: build dist/index.js
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "12"

      - name: Install dependencies
        run: npm ci

      - name: Compile action
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: main
          path: dist/index.js

  test_create:
    name: test secret creation
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: main
          path: dist

      - name: Create a secret
        id: self
        uses: ./
        with:
          name: TEST_${{ github.sha }}
          value: test
          pa_token: ${{ secrets.PA_TOKEN_PIPELINE }}

      - name: Assert action output
        if: steps.self.outputs.status != '201'
        run: echo "::error::Expected HTTP status code 201 got
          ${{steps.self.outputs.status}}"; exit 1

      - name: Confirm secret creation
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/actions/secrets/:secret_name
          repository: ${{ github.repository }}
          secret_name: TEST_${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN_PIPELINE }}

      - name: Delete secret
        if: always()
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/:repository/actions/secrets/:secret_name
          repository: ${{ github.repository }}
          secret_name: TEST_${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN_PIPELINE }}

  test_repo_location:
    name: test secret creation in foreign repository
    runs-on: ubuntu-latest
    needs: build
    env:
      FOREIGN_REPO: gliech/dotfiles
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: main
          path: dist

      - name: Create a secret
        id: self
        uses: ./
        with:
          location: ${{ env.FOREIGN_REPO }}
          name: TEST_${{ github.sha }}
          value: test
          pa_token: ${{ secrets.PA_TOKEN_PIPELINE }}

      - name: Assert action output
        if: steps.self.outputs.status != '201'
        run: echo "::error::Expected HTTP status code 201 got
          ${{steps.self.outputs.status}}"; exit 1

      - name: Confirm secret creation
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:repository/actions/secrets/:secret_name
          repository: ${{ env.FOREIGN_REPO }}
          secret_name: TEST_${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN_PIPELINE }}

      - name: Delete secret
        if: always()
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/:repository/actions/secrets/:secret_name
          repository: ${{ env.FOREIGN_REPO }}
          secret_name: TEST_${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN_PIPELINE }}

  test_update:
    name: test secret update
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: main
          path: dist

      - name: Update a secret
        id: self
        uses: ./
        with:
          name: TEST_UPDATE
          value: ${{ github.sha }}
          pa_token: ${{ secrets.PA_TOKEN_PIPELINE }}

      - name: Assert action output
        if: steps.self.outputs.status != '204'
        run: echo "::error::Expected HTTP status code 204 got
          ${{steps.self.outputs.status}}"; exit 1

  test_organization:
    name: test organization secret
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: main
          path: dist

      - name: Update a secret
        id: self
        uses: ./
        with:
          location: deinopon
          org_visibility: ''
          name: CREATE_GITHUB_SECRET_ACTION_TEST
          value: ${{ github.sha }}
          pa_token: ${{ secrets.PA_TOKEN_ORG_ADMIN }}

      - name: Assert action output
        if: steps.self.outputs.status != '204'
        run: echo "::error::Expected HTTP status code 204 got
          ${{steps.self.outputs.status}}"; exit 1

  release:
    name: release new version
    if: contains(fromJson('["refs/heads/master","refs/heads/next"]'),
      github.ref)
    runs-on: ubuntu-latest
    needs:
      - test_create
      - test_repo_location
      - test_update
      - test_organization
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: main
          path: dist

      - name: Install nodejs
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm ci

      - name: Create new release
        run: npm run release
        env:
          GIT_AUTHOR_NAME: ${{ github.actor }}
          GIT_AUTHOR_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GIT_COMMITTER_NAME: ${{ github.actor }}
          GIT_COMMITTER_EMAIL: ${{ github.actor }}@users.noreply.github.com
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN_PIPELINE }}

  cleanup:
    name: cleanup
    if: always()
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - name: Delete run artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: main
